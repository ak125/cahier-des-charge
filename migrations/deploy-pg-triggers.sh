#!/bin/bash
# Script pour appliquer la migration SQL des triggers PostgreSQL pour le syst√®me NOTIFY
# √Ä ex√©cuter depuis la racine du projet

set -e
echo "üîß D√©ploiement des triggers PostgreSQL LISTEN/NOTIFY pour MCP Jobs..."

# R√©cup√©ration des variables d'environnement (ou utilisation des valeurs par d√©faut)
DB_HOST=${POSTGRES_HOST:-localhost}
DB_PORT=${POSTGRES_PORT:-5432}
DB_NAME=${POSTGRES_DB:-remix_nestjs_dev}
DB_USER=${POSTGRES_USER:-postgres}
DB_PASSWORD=${POSTGRES_PASSWORD:-postgres}

# Affichage des informations de connexion
echo "üìä Connexion √† PostgreSQL: $DB_HOST:$DB_PORT/$DB_NAME (user: $DB_USER)"

# Ex√©cution du script SQL
PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -f ./migration-toolkit/mcp-jobs-notify-trigger.sql

# V√©rification du r√©sultat
if [ $? -eq 0 ]; then
    echo "‚úÖ Migration SQL appliqu√©e avec succ√®s!"
    echo "üöÄ Le syst√®me LISTEN/NOTIFY est maintenant configur√© pour les jobs MCP."
else
    echo "‚ùå Erreur lors de l'application de la migration SQL."
    exit 1
fi

# Information suppl√©mentaire
echo "üí° Pour tester, vous pouvez utiliser cette commande:"
echo "   PGPASSWORD=$DB_PASSWORD psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c \"UPDATE mcp_jobs SET status = 'done' WHERE job_id = 'test-job-123';\""