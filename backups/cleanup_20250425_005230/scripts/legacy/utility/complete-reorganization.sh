#!/bin/bash
# complete-reorganization.sh - Finalise la r√©organisation de tous les fichiers restants
# Date: 10 avril 2025

echo "üöÄ Finalisation de la r√©organisation compl√®te du projet cahier-des-charge"

# 1. D√©placer les fichiers du cahier des charges restants
echo "üìö Consolidation finale de la documentation..."

# Cr√©er les dossiers s'ils n'existent pas d√©j√†
mkdir -p docs/cahier-des-charges/chapitres
mkdir -p docs/specifications
mkdir -p docs/rapports
mkdir -p scripts/migration
mkdir -p scripts/verification
mkdir -p scripts/generation
mkdir -p scripts/documentation
mkdir -p config/migration

# Traiter les dossiers de documentation existants
if [ -d "cahier" ]; then
  echo "  - D√©placement de cahier/ ‚Üí docs/specifications/"
  find cahier -type f -not -path "*/\.*" -exec cp {} docs/specifications/ \;
  echo "  ‚úÖ Contenu du dossier cahier/ copi√© vers docs/specifications/"
fi

if [ -d "cahier-des-charges" ]; then
  echo "  - D√©placement de cahier-des-charges/ ‚Üí docs/cahier-des-charges/"
  # Cr√©er d'abord les sous-dossiers si n√©cessaire
  find cahier-des-charges -type d -not -path "cahier-des-charges" | while read dir; do
    rel_dir=${dir#cahier-des-charges/}
    mkdir -p "docs/cahier-des-charges/$rel_dir"
  done
  # Copier les fichiers
  find cahier-des-charges -type f -not -path "*/\.*" | while read file; do
    rel_file=${file#cahier-des-charges/}
    cp "$file" "docs/cahier-des-charges/$rel_file"
  done
  echo "  ‚úÖ Contenu du dossier cahier-des-charges/ copi√© vers docs/cahier-des-charges/"
fi

if [ -d "cahier-des-charges-backup-20250410-113108" ]; then
  echo "  - D√©placement de cahier-des-charges-backup-20250410-113108/ ‚Üí docs/cahier-des-charges/"
  # Copier les fichiers
  find cahier-des-charges-backup-20250410-113108 -type f -not -path "*/\.*" -exec cp {} docs/cahier-des-charges/ \;
  echo "  ‚úÖ Contenu du dossier cahier-des-charges-backup-20250410-113108/ copi√© vers docs/cahier-des-charges/"
fi

# 2. Organiser les fichiers MD √† la racine
echo "üìã Organisation des fichiers markdown..."
mv 48-plan-migration-detaille.md docs/cahier-des-charges/ 2>/dev/null && echo "  - 48-plan-migration-detaille.md ‚Üí docs/cahier-des-charges/"
mv 50-revision-controle-qualite.md docs/cahier-des-charges/ 2>/dev/null && echo "  - 50-revision-controle-qualite.md ‚Üí docs/cahier-des-charges/"
mv checklist-migration-ia.md docs/cahier-des-charges/ 2>/dev/null && echo "  - checklist-migration-ia.md ‚Üí docs/cahier-des-charges/"
mv exemple-utilisation.md docs/specifications/ 2>/dev/null && echo "  - exemple-utilisation.md ‚Üí docs/specifications/"

# 3. Organiser les fichiers de configuration
echo "‚öôÔ∏è Organisation des fichiers de configuration..."
# Migration des fichiers de configuration
mv cahier_check.config.json config/migration/ 2>/dev/null && echo "  - cahier_check.config.json ‚Üí config/migration/"
mv migration-config.json config/migration/ 2>/dev/null && echo "  - migration-config.json ‚Üí config/migration/"
# Cr√©er un lien symbolique pour migration-config.json √† la racine pour maintenir la compatibilit√©
if [ -f "config/migration/migration-config.json" ]; then
  ln -sf config/migration/migration-config.json migration-config.json 2>/dev/null && echo "  - Lien symbolique cr√©√©: migration-config.json ‚Üí config/migration/migration-config.json"
fi

# 4. Organiser les fichiers HTML et visualisations
echo "üñºÔ∏è Organisation des fichiers de visualisation..."
mkdir -p assets/visualisations
mv cahier-des-charges-lecture-optimisee.html assets/visualisations/ 2>/dev/null && echo "  - cahier-des-charges-lecture-optimisee.html ‚Üí assets/visualisations/"
mv vue-complete-auto.html assets/visualisations/ 2>/dev/null && echo "  - vue-complete-auto.html ‚Üí assets/visualisations/"
mv vue-complete.html assets/visualisations/ 2>/dev/null && echo "  - vue-complete.html ‚Üí assets/visualisations/"

# 5. Organiser les fichiers de rapport
echo "üìä Organisation des fichiers de rapport..."
mv health-report.txt reports/ 2>/dev/null && echo "  - health-report.txt ‚Üí reports/"
mv structure_graph.json reports/ 2>/dev/null && echo "  - structure_graph.json ‚Üí reports/"

# 6. Organiser les scripts de r√©organisation
echo "üõ†Ô∏è Organisation des scripts d'organisation..."
mkdir -p scripts/reorganisation
mv organize-project.sh scripts/reorganisation/ 2>/dev/null && echo "  - organize-project.sh ‚Üí scripts/reorganisation/"
mv fix-agent-imports.sh scripts/reorganisation/ 2>/dev/null && echo "  - fix-agent-imports.sh ‚Üí scripts/reorganisation/"
mv verify-reorganization.sh scripts/reorganisation/ 2>/dev/null && echo "  - verify-reorganization.sh ‚Üí scripts/reorganisation/"
# Cr√©er des liens symboliques √† la racine pour faciliter l'acc√®s
for script in organize-project.sh fix-agent-imports.sh verify-reorganization.sh; do
  if [ -f "scripts/reorganisation/$script" ]; then
    ln -sf scripts/reorganisation/$script $script 2>/dev/null && echo "  - Lien symbolique cr√©√©: $script ‚Üí scripts/reorganisation/$script"
  fi
done

# 7. Organiser les workflows n8n
echo "üîÑ Organisation des workflows n8n..."
mkdir -p workflows/migration
mv n8n.pipeline.json workflows/migration/ 2>/dev/null && echo "  - n8n.pipeline.json ‚Üí workflows/migration/"
# Cr√©er un lien symbolique √† la racine
if [ -f "workflows/migration/n8n.pipeline.json" ]; then
  ln -sf workflows/migration/n8n.pipeline.json n8n.pipeline.json 2>/dev/null && echo "  - Lien symbolique cr√©√©: n8n.pipeline.json ‚Üí workflows/migration/n8n.pipeline.json"
fi

echo "‚úÖ Finalisation de la r√©organisation termin√©e !"
echo ""
echo "‚ö†Ô∏è ATTENTION: Les fichiers et dossiers originaux restent pr√©sents √† la racine."
echo "   Pour les supprimer apr√®s v√©rification, utilisez la commande suivante:"
echo ""
echo "   rm -rf cahier/ cahier-des-charges/ cahier-des-charges-backup-20250410-113108/"
echo "   rm 48-plan-migration-detaille.md 50-revision-controle-qualite.md checklist-migration-ia.md exemple-utilisation.md (et autres fichiers d√©plac√©s)"
echo ""
echo "üìå Pour v√©rifier l'√©tat de la r√©organisation, utilisez: ./verify-reorganization.sh"