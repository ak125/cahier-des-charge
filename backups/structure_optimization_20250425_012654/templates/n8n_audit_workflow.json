{
  "name": "PHP Audit Pipeline",
  "nodes": [
    {
      "parameters": {
        "path": "{{ $json.filePath }}"
      },
      "name": "Read PHP File",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "functionCode": "// Convertit le contenu binaire en texte\nconst content = Buffer.from($input.item.binary.data, 'base64').toString();\nconst filePath = $input.item.json.filePath;\nconst fileName = filePath.split('/').pop();\n\nreturn {\n  json: {\n    filePath,\n    fileName,\n    content\n  }\n};"
      },
      "name": "Prepare Content",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        400,
        300
      ]
    },
    {
      "parameters": {
        "command": "cd /path/to/agents && node BusinessAgent.js \"{{ $json.filePath }}\""
      },
      "name": "Business Agent",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        600,
        100
      ]
    },
    {
      "parameters": {
        "command": "cd /path/to/agents && node StructureAgent.js \"{{ $json.filePath }}\""
      },
      "name": "Structure Agent",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        600,
        250
      ]
    },
    {
      "parameters": {
        "command": "cd /path/to/agents && node DataAgent.js \"{{ $json.filePath }}\""
      },
      "name": "Data Agent",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        600,
        400
      ]
    },
    {
      "parameters": {
        "command": "cd /path/to/agents && node DependencyAgent.js \"{{ $json.filePath }}\""
      },
      "name": "Dependency Agent",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        600,
        550
      ]
    },
    {
      "parameters": {
        "command": "cd /path/to/agents && node QualityAgent.js \"{{ $json.filePath }}\""
      },
      "name": "Quality Agent",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        600,
        700
      ]
    },
    {
      "parameters": {
        "command": "cd /path/to/agents && node StrategyAgent.js \"{{ $json.filePath }}\""
      },
      "name": "Strategy Agent",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        600,
        850
      ]
    },
    {
      "parameters": {
        "command": "cd /path/to/agents && node AssemblerAgent.js \"{{ $json.filePath }}\""
      },
      "name": "Assembler Agent",
      "type": "n8n-nodes-base.executeCommand",
      "typeVersion": 1,
      "position": [
        850,
        450
      ]
    },
    {
      "parameters": {
        "path": "{{ $json.filePath }}.audit.md"
      },
      "name": "Read Audit Result",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        1000,
        450
      ]
    },
    {
      "parameters": {
        "path": "{{ $json.filePath }}.backlog.json"
      },
      "name": "Read Backlog",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        1000,
        600
      ]
    },
    {
      "parameters": {
        "channel": "audit-results",
        "text": "Nouvel audit terminé pour `{{ $json.fileName }}`",
        "otherOptions": {
          "attachments": [
            {
              "title": "Audit PHP - {{ $json.fileName }}",
              "text": "L'audit complet est disponible dans le dépôt Git.",
              "color": "#36a64f"
            }
          ]
        }
      },
      "name": "Notify Slack",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [
        1200,
        450
      ]
    },
    {
      "parameters": {
        "functionCode": "// Génère l'URL du commit GitHub\nconst githubBaseUrl = 'https://github.com/organisation/repo/blob/main/';\nconst auditUrl = `${githubBaseUrl}${$input.item.json.filePath}.audit.md`;\nconst backlogUrl = `${githubBaseUrl}${$input.item.json.filePath}.backlog.json`;\n\nreturn {\n  json: {\n    ...$input.item.json,\n    auditUrl,\n    backlogUrl\n  }\n};"
      },
      "name": "Generate URLs",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1200,
        600
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.github.com/repos/organisation/repo/issues",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {
          "bodyContentType": "json",
          "body": "{\n  \"title\": \"Audit PHP: {{ $json.fileName }}\",\n  \"body\": \"## Audit automatisé PHP\\n\\nL'audit complet est disponible [ici]({{ $json.auditUrl }})\\n\\nLe backlog des tâches est disponible [ici]({{ $json.backlogUrl }})\\n\\n### À faire\\n\\n- [ ] Vérifier la migration suggérée\\n- [ ] Assigner les tâches du backlog\\n- [ ] Planifier la migration\",\n  \"labels\": [\"audit\", \"migration\", \"php\"]\n}"
        }
      },
      "name": "Create GitHub Issue",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1400,
        600
      ]
    }
  ],
  "connections": {
    "Read PHP File": {
      "main": [
        [
          {
            "node": "Prepare Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Content": {
      "main": [
        [
          {
            "node": "Business Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Structure Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Data Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Dependency Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Quality Agent",
            "type": "main",
            "index": 0
          },
          {
            "node": "Strategy Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Business Agent": {
      "main": [
        [
          {
            "node": "Assembler Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structure Agent": {
      "main": [
        [
          {
            "node": "Assembler Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Agent": {
      "main": [
        [
          {
            "node": "Assembler Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dependency Agent": {
      "main": [
        [
          {
            "node": "Assembler Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quality Agent": {
      "main": [
        [
          {
            "node": "Assembler Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Strategy Agent": {
      "main": [
        [
          {
            "node": "Assembler Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assembler Agent": {
      "main": [
        [
          {
            "node": "Read Audit Result",
            "type": "main",
            "index": 0
          },
          {
            "node": "Read Backlog",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Audit Result": {
      "main": [
        [
          {
            "node": "Notify Slack",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Backlog": {
      "main": [
        [
          {
            "node": "Generate URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate URLs": {
      "main": [
        [
          {
            "node": "Create GitHub Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {},
  "id": "1"
}
