{
  "id": "intelligent-php-selector",
  "name": "S√©lection Intelligente des Fichiers PHP",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 0 * * *"
            }
          ]
        }
      },
      "name": "D√©clencheur Quotidien",
      "type": "n8n-nodes-base.cron",
      "position": [
        100,
        200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {}
      },
      "name": "Trigger Manuel",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        100,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "httpMethod": "POST",
        "path": "audit-trigger",
        "options": {}
      },
      "name": "Webhook GitHub",
      "type": "n8n-nodes-base.webhook",
      "position": [
        100,
        480
      ],
      "webhookId": "audit-php-files-webhook",
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "mergeByPosition"
      },
      "name": "Merge D√©clencheurs",
      "type": "n8n-nodes-base.merge",
      "position": [
        300,
        340
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "command": "cd /workspaces/cahier-des-charge && npx ts-node agents/discovery/discovery-agent.ts",
        "workingDirectory": "/workspaces/cahier-des-charge",
        "executeTimeout": 300
      },
      "name": "Ex√©cuter Discovery Agent",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        500,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "cd /workspaces/cahier-des-charge && npx ts-node agents/discovery/audit-selector.ts",
        "workingDirectory": "/workspaces/cahier-des-charge",
        "executeTimeout": 60
      },
      "name": "Ex√©cuter Audit Selector",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        700,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Extraction des fichiers PHP s√©lectionn√©s depuis la sortie JSON\nconst output = $input.item.json.stdout || '';\n\ntry {\n  // Extraction de la liste JSON des fichiers\n  const jsonMatch = output.match(/\\[.*?\\]/s);\n  \n  if (!jsonMatch) {\n    throw new Error('Aucune liste de fichiers trouv√©e dans la sortie');\n  }\n  \n  const selectedFiles = JSON.parse(jsonMatch[0]);\n  \n  if (!Array.isArray(selectedFiles) || selectedFiles.length === 0) {\n    return [\n      {\n        json: {\n          message: 'Aucun fichier √† analyser pour cette ex√©cution',\n          timestamp: new Date().toISOString(),\n          selectedFiles: []\n        }\n      }\n    ];\n  }\n  \n  // Retourner un item pour chaque fichier s√©lectionn√©\n  return selectedFiles.map(filePath => ({\n    json: {\n      filePath,\n      fileName: filePath.split('/').pop(),\n      timestamp: new Date().toISOString(),\n      batchId: new Date().toISOString().replace(/[:.]/g, '-'),\n      selectionMethod: 'intelligent-selector'\n    }\n  }));\n} catch (error) {\n  throw new Error(`Erreur lors du traitement de la sortie: ${error.message}`);\n}"
      },
      "name": "Traiter Liste Fichiers",
      "type": "n8n-nodes-base.code",
      "position": [
        900,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ Object.keys($json).includes('filePath') }}",
              "value2": true
            }
          ]
        }
      },
      "name": "Fichiers Trouv√©s?",
      "type": "n8n-nodes-base.if",
      "position": [
        1100,
        340
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "{{ $env.NOTIFICATION_CHAT_ID }}",
        "text": "üîç *S√©lection intelligente des fichiers PHP*\n\nAucun fichier prioritaire n'a √©t√© trouv√© pour cette ex√©cution.\n\n*Timestamp:* {{ $json.timestamp }}\n\n[Voir le tableau de bord](http://localhost:3000/audit-dashboard)",
        "additionalFields": {
          "parseMode": "Markdown",
          "disableNotification": true
        }
      },
      "name": "Notifier Aucun Fichier",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1300,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "functionCode": "// Pr√©paration pour l'analyse d'audit\nreturn {\n  json: {\n    filePath: $input.item.json.filePath,\n    fileName: $input.item.json.fileName,\n    timestamp: $input.item.json.timestamp,\n    batchId: $input.item.json.batchId,\n    analysisType: 'audit',\n    priority: 'high'\n  }\n};"
      },
      "name": "Pr√©parer pour Audit",
      "type": "n8n-nodes-base.function",
      "position": [
        1300,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "command": "cd /workspaces/cahier-des-charge && npx ts-node agents/analysis/audit-analyzer.ts --file={{ $json.filePath }} --output-dir=/workspaces/cahier-des-charge/reports/analysis",
        "workingDirectory": "/workspaces/cahier-des-charge",
        "executeTimeout": 180
      },
      "name": "Ex√©cuter Analyse d'Audit",
      "type": "n8n-nodes-base.executeCommand",
      "position": [
        1500,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "{{ $env.NOTIFICATION_CHAT_ID }}",
        "text": "‚úÖ *Analyse termin√©e pour {{ $json.fileName }}*\n\nüìÑ Audit : OK\nüß© Backlog : OK\nüîÅ Graphe : OK\n\n*Timestamp:* {{ $json.timestamp }}\n\n[Voir le rapport](http://localhost:3000/audit/{{ $json.fileName }})",
        "additionalFields": {
          "parseMode": "Markdown",
          "disableNotification": false
        }
      },
      "name": "Notifier Analyse Termin√©e",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1700,
        240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chatId": "{{ $env.NOTIFICATION_CHAT_ID }}",
        "text": "üß† *S√©lection intelligente des fichiers PHP*\n\nFichier s√©lectionn√© pour analyse : `{{ $json.filePath }}`\nPriorit√©: {{ $json.priority }}\nType d'analyse: {{ $json.analysisType }}\n\n*Batch ID:* {{ $json.batchId }}\n*Timestamp:* {{ $json.timestamp }}\n\n[Voir le tableau de bord](http://localhost:3000/audit-dashboard)",
        "additionalFields": {
          "parseMode": "Markdown",
          "disableNotification": true
        }
      },
      "name": "Notifier Fichier S√©lectionn√©",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1300,
        120
      ],
      "typeVersion": 1
    }
  ],
  "connections": {
    "D√©clencheur Quotidien": {
      "main": [
        [
          {
            "node": "Merge D√©clencheurs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Manuel": {
      "main": [
        [
          {
            "node": "Merge D√©clencheurs",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Webhook GitHub": {
      "main": [
        [
          {
            "node": "Merge D√©clencheurs",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge D√©clencheurs": {
      "main": [
        [
          {
            "node": "Ex√©cuter Discovery Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ex√©cuter Discovery Agent": {
      "main": [
        [
          {
            "node": "Ex√©cuter Audit Selector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ex√©cuter Audit Selector": {
      "main": [
        [
          {
            "node": "Traiter Liste Fichiers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Traiter Liste Fichiers": {
      "main": [
        [
          {
            "node": "Fichiers Trouv√©s?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fichiers Trouv√©s?": {
      "main": [
        [
          {
            "node": "Pr√©parer pour Audit",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notifier Fichier S√©lectionn√©",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Notifier Aucun Fichier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Pr√©parer pour Audit": {
      "main": [
        [
          {
            "node": "Ex√©cuter Analyse d'Audit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ex√©cuter Analyse d'Audit": {
      "main": [
        [
          {
            "node": "Notifier Analyse Termin√©e",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  }
}