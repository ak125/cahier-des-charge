name: MCP Agent Verification Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  verify-agent-results:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build packages
        run: |
          npm run build --workspace=packages/mcp-wasm-runtime
          npm run build --workspace=packages/mcp-validation
          npm run build --workspace=packages/mcp-sigstore
      
      # Exécution et vérification des agents
      - name: Run agent pipeline
        id: run-agents
        run: node ./examples/mcp-agent-integration/agent-pipeline-example.js
        env:
          SIGSTORE_EMAIL: ${{ secrets.SIGSTORE_EMAIL }}
      
      # Vérification des signatures pour l'audit
      - name: Verify agent signatures
        run: |
          echo "Vérification des signatures des résultats d'agents..."
          
          # Lister tous les fichiers de signature générés
          SIGNATURES=$(find ./examples/mcp-agent-integration/signatures -name "*.sig")
          
          # Vérifier chaque signature
          for SIG_FILE in $SIGNATURES; do
            AGENT_ID=$(echo $SIG_FILE | cut -d'/' -f5)
            RUN_ID=$(basename $SIG_FILE .sig)
            
            echo "Vérification de la signature pour l'agent $AGENT_ID, exécution $RUN_ID"
            npx ts-node ./packages/mcp-sigstore/src/verification/verify-cli.ts \
              ./examples/mcp-agent-integration/signatures \
              $AGENT_ID \
              $RUN_ID || exit 1
          done
      
      # Publication des résultats vérifiés dans les artefacts
      - name: Upload verified results
        uses: actions/upload-artifact@v3
        with:
          name: verified-agent-results
          path: ./examples/mcp-agent-integration/signatures
          retention-days: 14
      
      # Ajout des résultats au rapport de sécurité
      - name: Generate security report
        if: success()
        run: |
          echo "## Rapport de vérification des signatures d'agents MCP" > security-report.md
          echo "### Exécution du $(date)" >> security-report.md
          echo "✅ Toutes les signatures ont été vérifiées avec succès" >> security-report.md
          echo "### Agents vérifiés:" >> security-report.md
          
          # Lister les agents vérifiés
          find ./examples/mcp-agent-integration/signatures -type d -mindepth 1 -maxdepth 1 | xargs -n1 basename | \
          while read agent; do
            COUNT=$(find ./examples/mcp-agent-integration/signatures/$agent -name "*.sig" | wc -l)
            echo "- $agent: $COUNT exécution(s)" >> security-report.md
          done
      
      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
          retention-days: 30