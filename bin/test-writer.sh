#!/bin/bash

echo "üß™ Agent test-writer MCP"
echo "üîç G√©n√©rateur de tests NestJS et Remix"
echo "----------------------------------------------------"

# V√©rifier les arguments
MODULE_NAME=""
TYPE="both"
AUTO_DETECT=false
GENERATE_COVERAGE=false
RUN_TESTS=false
SOURCE_PATH=""

print_help() {
  echo "Usage: $0 [options]"
  echo "Options:"
  echo "  --module=MODULENAME   Nom du module/route √† tester"
  echo "  --type=TYPE           Type de tests √† g√©n√©rer (nestjs, remix, both)"
  echo "  --auto-detect         D√©tection automatique des modules/routes"
  echo "  --coverage            G√©n√©rer un fichier de suivi de couverture"
  echo "  --run-tests           Ex√©cuter les tests apr√®s g√©n√©ration"
  echo "  --source=PATH         Chemin source sp√©cifique (optionnel)"
  echo "  --help                Afficher cette aide"
  echo ""
  echo "Exemples:"
  echo "  $0 --module=user --type=nestjs"
  echo "  $0 --auto-detect --type=both --coverage"
  echo "  $0 --module=products --type=remix --run-tests"
}

# Analyser les arguments
for arg in "$@"; do
  case $arg in
    --module=*)
      MODULE_NAME="${arg#*=}"
      ;;
    --type=*)
      TYPE="${arg#*=}"
      ;;
    --source=*)
      SOURCE_PATH="${arg#*=}"
      ;;
    --auto-detect)
      AUTO_DETECT=true
      ;;
    --coverage)
      GENERATE_COVERAGE=true
      ;;
    --run-tests)
      RUN_TESTS=true
      ;;
    --help)
      print_help
      exit 0
      ;;
    *)
      echo "‚ö†Ô∏è Option inconnue: $arg"
      print_help
      exit 1
      ;;
  esac
done

# V√©rifier que les arguments sont valides
if [ "$AUTO_DETECT" = false ] && [ -z "$MODULE_NAME" ]; then
  echo "‚ö†Ô∏è Erreur: Vous devez sp√©cifier un module (--module=xxx) ou utiliser l'auto-d√©tection (--auto-detect)"
  print_help
  exit 1
fi

if [ "$TYPE" != "nestjs" ] && [ "$TYPE" != "remix" ] && [ "$TYPE" != "both" ]; then
  echo "‚ö†Ô∏è Erreur: Le type doit √™tre 'nestjs', 'remix' ou 'both'"
  print_help
  exit 1
fi

# Pr√©parer le JSON de contexte
JSON_CONTEXT="{"
if [ -n "$MODULE_NAME" ]; then
  JSON_CONTEXT+="\"moduleName\": \"$MODULE_NAME\", "
fi
JSON_CONTEXT+="\"type\": \"$TYPE\", "
JSON_CONTEXT+="\"autoDetect\": $AUTO_DETECT, "
JSON_CONTEXT+="\"generateCoverage\": $GENERATE_COVERAGE, "
JSON_CONTEXT+="\"runTests\": $RUN_TESTS"
if [ -n "$SOURCE_PATH" ]; then
  JSON_CONTEXT+=", \"sourcePath\": \"$SOURCE_PATH\""
fi
JSON_CONTEXT+="}"

echo "üìÑ Configuration:"
echo "  Type: $TYPE"
if [ -n "$MODULE_NAME" ]; then
  echo "  Module: $MODULE_NAME"
fi
if [ "$AUTO_DETECT" = true ]; then
  echo "  Auto-d√©tection: Activ√©e"
fi
if [ "$GENERATE_COVERAGE" = true ]; then
  echo "  Suivi de couverture: Activ√©"
fi
if [ "$RUN_TESTS" = true ]; then
  echo "  Ex√©cution des tests: Activ√©e"
fi
if [ -n "$SOURCE_PATH" ]; then
  echo "  Chemin source: $SOURCE_PATH"
fi
echo "----------------------------------------------------"

# Ex√©cuter l'agent
echo "üöÄ Ex√©cution de l'agent test-writer..."
OUTPUT=$(pnpm tsx apps/mcp-server/src/handleAgentRequest.ts test-writer "$JSON_CONTEXT" 2>&1)
EXIT_CODE=$?

# Afficher la sortie
echo "$OUTPUT"

# V√©rifier si l'agent a g√©n√©r√© des tests
if echo "$OUTPUT" | grep -q "Test.*g√©n√©r√©"; then
  echo "----------------------------------------------------"
  echo "‚úÖ Tests g√©n√©r√©s avec succ√®s!"
  
  # V√©rifier si un rapport de couverture a √©t√© g√©n√©r√©
  if [ "$GENERATE_COVERAGE" = true ] && [ -f "reports/test_coverage_map.json" ]; then
    echo "üìä Rapport de couverture g√©n√©r√©: $(pwd)/reports/test_coverage_map.json"
  fi
  
  # Si les tests ont √©t√© ex√©cut√©s, afficher un r√©sum√©
  if [ "$RUN_TESTS" = true ]; then
    if echo "$OUTPUT" | grep -q "Tests.*ex√©cut√©s avec succ√®s"; then
      echo "üß™ Tests ex√©cut√©s avec succ√®s!"
    else
      echo "‚ö†Ô∏è Les tests ont √©t√© g√©n√©r√©s mais n'ont pas pu √™tre ex√©cut√©s correctement."
      echo "   V√©rifiez les erreurs ci-dessus pour plus de d√©tails."
    fi
  else
    echo "üí° Pour ex√©cuter les tests g√©n√©r√©s:"
    if [ "$TYPE" = "nestjs" ] || [ "$TYPE" = "both" ]; then
      echo "   pnpm test:unit"
    fi
    if [ "$TYPE" = "remix" ] || [ "$TYPE" = "both" ]; then
      echo "   pnpm test:e2e"
    fi
  fi
fi

exit $EXIT_CODE