#!/bin/bash
# Script pour unifier les agents MCP
# Usage: ./unify-agents.sh [--exec]

set -e

echo "üöÄ Outil d'unification des Agents MCP"
echo "===================================="

# V√©rifier si ts-node est install√©
if ! command -v ts-node &> /dev/null; then
  echo "‚ö†Ô∏è ts-node n'est pas install√© globalement."
  echo "Installation en cours..."
  npm install -g ts-node
fi

echo ""
echo "üìä Ex√©cution de l'analyse des agents..."
echo ""

# Ex√©cuter le script d'analyse directement avec ts-node pour √©viter les probl√®mes de compilation
if [ "$1" == "--exec" ]; then
  echo "‚ö†Ô∏è MODE EX√âCUTION R√âELLE ‚ö†Ô∏è"
  echo "Les agents seront effectivement migr√©s"
  
  # Demander confirmation
  read -p "√ätes-vous s√ªr de vouloir proc√©der √† la migration r√©elle ? (y/n) " -n 1 -r
  echo
  
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    ts-node tools/agent-migration-analyzer.ts --exec
  else
    echo "Migration annul√©e."
    exit 0
  fi
else
  echo "‚ÑπÔ∏è MODE DRY RUN"
  echo "Aucune modification ne sera effectu√©e"
  ts-node tools/agent-migration-analyzer.ts
fi

echo ""
echo "üìù G√©n√©ration du rapport de migration..."

# Cr√©er un rapport de migration
timestamp=$(date +"%Y%m%d-%H%M%S")
report_file="agent-migration-report-$timestamp.md"

echo "# Rapport de Migration des Agents MCP" > "$report_file"
echo "Date: $(date)" >> "$report_file"
echo "" >> "$report_file"
echo "## Agents analys√©s" >> "$report_file"

# Ajouter une liste des agents analys√©s
echo "Un rapport de migration a √©t√© g√©n√©r√©: $report_file"
echo ""
echo "‚úÖ Termin√©"