{
  "nodes": [
    {
      "parameters": {
        "functionCode": "// Script pour ex√©cuter l'agent de surveillance post-migration\nconst { execSync } = require('child_process');\nconst path = require('path');\n\n// R√©cup√©rer les param√®tres\nconst environment = $input.environment || 'preview';\nconst targetRoutes = $input.routes || [];\nconst outputDir = $input.outputDir || 'reports/monitoring';\n\n// Construire la commande\nlet command = `npx ts-node ${path.join(process.cwd(), 'agents', 'monitoring-check.ts')} --env ${environment}`;\n\n// Ajouter les routes cibles si sp√©cifi√©es\nif (targetRoutes.length > 0) {\n  command += ` --target ${targetRoutes.join(',')}`;\n}\n\n// Ajouter le dossier de sortie\ncommand += ` --output ${outputDir}`;\n\n// Ex√©cuter la commande\ntry {\n  console.log(`Ex√©cution de: ${command}`);\n  const output = execSync(command, { encoding: 'utf8' });\n  console.log(output);\n  \n  // R√©cup√©rer les r√©sultats\n  const fs = require('fs');\n  const monitoringResultsPath = path.join(process.cwd(), outputDir, 'post_migration_monitor.json');\n  \n  if (fs.existsSync(monitoringResultsPath)) {\n    const results = JSON.parse(fs.readFileSync(monitoringResultsPath, 'utf8'));\n    \n    // Pr√©parer la sortie pour le n≈ìud suivant\n    return {\n      success: true,\n      results,\n      summary: results.summary,\n      reportsPath: outputDir,\n      timestamp: new Date().toISOString()\n    };\n  } else {\n    throw new Error('Fichier de r√©sultats non trouv√©');\n  }\n} catch (error) {\n  console.error(`Erreur: ${error.message}`);\n  return {\n    success: false,\n    error: error.message\n  };\n}"
      },
      "name": "Ex√©cuter monitoring-check",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        880,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.success }}",
              "value2": true
            }
          ]
        }
      },
      "name": "V√©rifier succ√®s",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1100,
        440
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $node[\"Entr√©e workflow\"].json.slackWebhook }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "=üö® Surveillance post-migration : probl√®mes d√©tect√©s !"
            },
            {
              "name": "blocks",
              "value": "={{ [\n  {\n    \"type\": \"header\",\n    \"text\": {\n      \"type\": \"plain_text\",\n      \"text\": \"üö® Probl√®mes post-migration d√©tect√©s\",\n      \"emoji\": true\n    }\n  },\n  {\n    \"type\": \"section\",\n    \"text\": {\n      \"type\": \"mrkdwn\",\n      \"text\": `*Environnement:* ${ $node[\"Entr√©e workflow\"].json.environment }\\n*URL:* ${ $json.results.baseUrl }\\n*Date:* ${ new Date().toLocaleString('fr-FR') }`\n    }\n  },\n  {\n    \"type\": \"section\",\n    \"fields\": [\n      {\n        \"type\": \"mrkdwn\",\n        \"text\": `*Routes test√©es:*\\n${ $json.summary.totalRoutes }`\n      },\n      {\n        \"type\": \"mrkdwn\",\n        \"text\": `*HTTP invalides:*\\n${ $json.summary.invalidStatusCodes }`\n      },\n      {\n        \"type\": \"mrkdwn\",\n        \"text\": `*R√©gressions perf:*\\n${ $json.summary.performanceRegressions }`\n      },\n      {\n        \"type\": \"mrkdwn\",\n        \"text\": `*Probl√®mes DOM:*\\n${ $json.summary.criticalDomIssues }`\n      }\n    ]\n  }\n] }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Envoyer alerte Slack",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        1320,
        520
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "status",
              "value": "={% if ($json.summary.invalidStatusCodes + $json.summary.criticalDomIssues) > 0 %}failed{% else %}success{% endif %}"
            },
            {
              "name": "message",
              "value": "={% if ($json.summary.invalidStatusCodes + $json.summary.criticalDomIssues) > 0 %}Des probl√®mes ont √©t√© d√©tect√©s lors de la surveillance post-migration.{% else %}La surveillance post-migration s'est termin√©e avec succ√®s.{% endif %}"
            },
            {
              "name": "reportUrl",
              "value": "={{ $json.reportsPath }}/monitoring_summary.md"
            }
          ],
          "number": [
            {
              "name": "totalIssues",
              "value": "={{ $json.summary.invalidStatusCodes + $json.summary.performanceRegressions + $json.summary.criticalDomIssues }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Pr√©parer r√©sum√©",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1320,
        360
      ]
    },
    {
      "parameters": {
        "content": "## Surveillance post-migration\n\nCe workflow ex√©cute l'agent de surveillance post-migration pour v√©rifier la stabilit√© des routes migr√©es apr√®s d√©ploiement.\n\n### Param√®tres d'entr√©e\n\n- `environment` : Environnement √† surveiller (preview, production, ou URL personnalis√©e)\n- `routes` : Liste des routes sp√©cifiques √† surveiller (optionnel)\n- `slackWebhook` : URL du webhook Slack pour les notifications (optionnel)\n\n### Fonctionnalit√©s principales\n\n- V√©rification des statuts HTTP (200, 301, 404, etc.)\n- Analyse des temps de r√©ponse et comparaison avec les donn√©es historiques\n- Inspection de la structure DOM pour d√©tecter les probl√®mes\n- G√©n√©ration de rapports d√©taill√©s\n- Envoi de notifications en cas de probl√®mes",
        "height": 420,
        "width": 697
      },
      "name": "Documentation",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        500,
        260
      ]
    },
    {
      "parameters": {
        "functionCode": "// V√©rifier si des alertes doivent √™tre envoy√©es\nconst invalidStatusCodes = $json.summary.invalidStatusCodes || 0;\nconst criticalDomIssues = $json.summary.criticalDomIssues || 0;\nconst performanceRegressions = $json.summary.performanceRegressions || 0;\n\n// D√©terminer si des alertes sont n√©cessaires\nconst needsAlert = (invalidStatusCodes > 0 || criticalDomIssues > 0 || performanceRegressions > 2);\n\nreturn {\n  needsAlert,\n  totalIssues: invalidStatusCodes + criticalDomIssues + performanceRegressions,\n  hasSucceeded: invalidStatusCodes === 0 && criticalDomIssues === 0\n};"
      },
      "name": "√âvaluer r√©sultats",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1100,
        700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "boolean": [
            {
              "value1": "={{ $json.needsAlert }}",
              "value2": true
            }
          ]
        }
      },
      "name": "Alerter ?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1320,
        700
      ]
    },
    {
      "parameters": {},
      "name": "Sortie workflow",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1540,
        440
      ]
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "hours"
            }
          ]
        }
      },
      "name": "Planification",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        660,
        200
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "environment",
              "value": "production"
            }
          ],
          "array": [
            {
              "name": "routes",
              "values": [
                {
                  "value": "/"
                },
                {
                  "value": "/produits"
                },
                {
                  "value": "/contact"
                },
                {
                  "value": "/blog"
                }
              ]
            }
          ]
        },
        "options": {}
      },
      "name": "Param√©trer monitoring production",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        880,
        200
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "monitoring",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        660,
        360
      ]
    },
    {
      "parameters": {},
      "name": "Entr√©e workflow",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        660,
        520
      ]
    }
  ],
  "connections": {
    "Ex√©cuter monitoring-check": {
      "main": [
        [
          {
            "node": "V√©rifier succ√®s",
            "type": "main",
            "index": 0
          },
          {
            "node": "√âvaluer r√©sultats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "V√©rifier succ√®s": {
      "main": [
        [
          {
            "node": "Pr√©parer r√©sum√©",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Pr√©parer r√©sum√©": {
      "main": [
        [
          {
            "node": "Sortie workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Alerter ?": {
      "main": [
        [
          {
            "node": "Envoyer alerte Slack",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Envoyer alerte Slack": {
      "main": [
        [
          {
            "node": "Sortie workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Planification": {
      "main": [
        [
          {
            "node": "Param√©trer monitoring production",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Param√©trer monitoring production": {
      "main": [
        [
          {
            "node": "Ex√©cuter monitoring-check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Ex√©cuter monitoring-check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Entr√©e workflow": {
      "main": [
        [
          {
            "node": "Ex√©cuter monitoring-check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}