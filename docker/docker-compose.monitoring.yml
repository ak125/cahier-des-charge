version: '3.8'

services:
  # Prometheus - Collecte et stockage des métriques
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--enable-feature=exemplar-storage'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  # Alertmanager - Gestion des alertes
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - monitoring

  # Grafana - Visualisation des données
  grafana:
    image: grafana/grafana:10.0.3
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      - GF_SMTP_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
    ports:
      - "3000:3000"
    networks:
      - monitoring
    depends_on:
      - prometheus

  # Node Exporter - Métriques système
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

  # Loki - Agrégation de logs
  loki:
    image: grafana/loki:2.8.3
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/config.yml
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - monitoring

  # Promtail - Collecteur de logs pour Loki
  promtail:
    image: grafana/promtail:2.8.3
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - ./logs:/logs:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring

  # Tempo - Distributed tracing
  tempo:
    image: grafana/tempo:2.1.1
    container_name: tempo
    restart: unless-stopped
    command: -config.file=/etc/tempo/config.yml
    volumes:
      - ./monitoring/tempo/config.yml:/etc/tempo/config.yml
      - tempo_data:/tmp/tempo
    ports:
      - "3200:3200" # tempo
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http
      - "9411:9411" # zipkin
    networks:
      - monitoring

  # BlackBox Exporter - Surveillance HTTP, HTTPS, DNS, etc.
  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    container_name: blackbox-exporter
    restart: unless-stopped
    volumes:
      - ./monitoring/blackbox/config.yml:/etc/blackbox_exporter/config.yml
    command:
      - '--config.file=/etc/blackbox_exporter/config.yml'
    ports:
      - "9115:9115"
    networks:
      - monitoring

  # Elasticsearch - Pour les logs avancés (optionnel, car Loki est déjà présent)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.2
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - monitoring
    profiles:
      - elastic # Utiliser docker compose --profile elastic pour activer

  # Kibana - Interface pour Elasticsearch (optionnel)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.8.2
    container_name: kibana
    restart: unless-stopped
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - monitoring
    profiles:
      - elastic # Utiliser docker compose --profile elastic pour activer

  # Dashboard SEO - Rapport SEO consolidé (custom)
  seo-dashboard:
    image: nginx:1.25.1-alpine
    container_name: seo-dashboard
    restart: unless-stopped
    volumes:
      - ./reports/seo/html:/usr/share/nginx/html
    ports:
      - "8080:80"
    networks:
      - monitoring
    profiles:
      - seo # Utiliser docker compose --profile seo pour activer

  # cAdvisor - Surveillance des conteneurs Docker
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8081:8080"
    networks:
      - monitoring

volumes:
  prometheus_data:
  grafana_data:
  loki_data:
  tempo_data:
  elasticsearch_data:


networks:
  monitoring:
    driver: bridge
