{
  "version": "1.0.0",
  "timestamp": "2025-04-12T16:30:00Z",
  "generator": "Entity Graph Generator",
  "metadata": {
    "primaryFormat": "mermaid",
    "compatibleTools": ["Obsidian", "Mermaid Live Editor", "GitHub Markdown"]
  },
  "entities": [
    {
      "name": "users",
      "displayName": "Utilisateurs",
      "type": "core",
      "fields": [
        { "name": "id", "type": "UUID", "isPrimary": true },
        { "name": "email", "type": "VARCHAR", "isUnique": true },
        {
          "name": "status",
          "type": "ENUM",
          "values": ["ACTIVE", "INACTIVE", "SUSPENDED", "DELETED"]
        }
      ]
    },
    {
      "name": "profiles",
      "displayName": "Profils",
      "type": "detail",
      "fields": [
        { "name": "id", "type": "INT", "isPrimary": true, "isAutoIncrement": true },
        { "name": "user_id", "type": "UUID", "isUnique": true },
        { "name": "metadata", "type": "JSONB" }
      ]
    },
    {
      "name": "sessions",
      "displayName": "Sessions",
      "type": "transactional",
      "fields": [
        { "name": "id", "type": "VARCHAR(40)", "isPrimary": true },
        { "name": "user_id", "type": "UUID", "isNullable": true },
        { "name": "last_activity", "type": "INT" }
      ]
    },
    {
      "name": "notifications",
      "displayName": "Notifications",
      "type": "messaging",
      "fields": [
        { "name": "id", "type": "UUID", "isPrimary": true },
        { "name": "user_id", "type": "UUID" },
        { "name": "type", "type": "ENUM", "values": ["EMAIL", "SMS", "PUSH", "SYSTEM"] },
        { "name": "is_read", "type": "BOOLEAN", "default": false }
      ]
    },
    {
      "name": "payments",
      "displayName": "Paiements",
      "type": "transactional",
      "fields": [
        { "name": "id", "type": "UUID", "isPrimary": true },
        { "name": "user_id", "type": "UUID" },
        { "name": "amount", "type": "DECIMAL(10,2)" },
        {
          "name": "status",
          "type": "ENUM",
          "values": ["PENDING", "COMPLETED", "FAILED", "REFUNDED", "CANCELLED"]
        }
      ]
    }
  ],
  "relationships": [
    {
      "name": "user_profile",
      "sourceEntity": "users",
      "targetEntity": "profiles",
      "type": "oneToOne",
      "sourceField": "id",
      "targetField": "user_id",
      "cascadeDelete": true,
      "color": "#4CAF50"
    },
    {
      "name": "user_sessions",
      "sourceEntity": "users",
      "targetEntity": "sessions",
      "type": "oneToMany",
      "sourceField": "id",
      "targetField": "user_id",
      "cascadeDelete": false,
      "optional": true,
      "color": "#2196F3"
    },
    {
      "name": "user_notifications",
      "sourceEntity": "users",
      "targetEntity": "notifications",
      "type": "oneToMany",
      "sourceField": "id",
      "targetField": "user_id",
      "cascadeDelete": true,
      "color": "#FF9800"
    },
    {
      "name": "user_payments",
      "sourceEntity": "users",
      "targetEntity": "payments",
      "type": "oneToMany",
      "sourceField": "id",
      "targetField": "user_id",
      "cascadeDelete": false,
      "color": "#9C27B0"
    }
  ],
  "mermaidRepresentation": "classDiagram\n    class users {\n        UUID id PK\n        VARCHAR email UK\n        ENUM status\n        BOOLEAN is_admin\n        TIMESTAMP created_at\n        TIMESTAMP updated_at\n    }\n    class profiles {\n        INT id PK\n        UUID user_id FK UK\n        JSONB metadata\n        TIMESTAMP created_at\n        TIMESTAMP updated_at\n    }\n    class sessions {\n        VARCHAR(40) id PK\n        UUID user_id FK\n        INT last_activity\n        TIMESTAMP created_at\n        TIMESTAMP expires_at\n    }\n    class notifications {\n        UUID id PK\n        UUID user_id FK\n        ENUM type\n        BOOLEAN is_read\n        TIMESTAMP created_at\n        TIMESTAMP read_at\n    }\n    class payments {\n        UUID id PK\n        UUID user_id FK\n        DECIMAL amount\n        ENUM status\n        TIMESTAMP created_at\n        TIMESTAMP updated_at\n    }\n    users \"1\" -- \"1\" profiles: has\n    users \"1\" -- \"*\" sessions: manages\n    users \"1\" -- \"*\" notifications: receives\n    users \"1\" -- \"*\" payments: makes",
  "recommendedVisualization": {
    "layout": "LR",
    "highlightCore": true,
    "showFieldTypes": true,
    "groupByDomain": true,
    "colorScheme": "blue-green"
  },
  "queryExamples": {
    "prisma": [
      "const user = await prisma.user.findUnique({ where: { id }, include: { profile: true } })",
      "const userWithNotifications = await prisma.user.findUnique({ where: { id }, include: { notifications: { where: { isRead: false } } } })"
    ],
    "postgresql": [
      "SELECT u.*, p.* FROM users u LEFT JOIN profiles p ON u.id = p.user_id WHERE u.id = $1",
      "SELECT u.*, COUNT(n.id) as unread_count FROM users u LEFT JOIN notifications n ON u.id = n.user_id AND n.is_read = false GROUP BY u.id"
    ]
  }
}
