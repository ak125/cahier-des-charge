version: '3.8'

services:
  # Base de données PostgreSQL pour l'application principale et Prisma
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: remix_nestjs_dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis pour la mise en cache et les sessions
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Supabase pour l'audit SQL, logs des agents, et métadonnées SEO
  supabase:
    image: supabase/postgres:15.1.0
    ports:
      - "54322:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: supabase
    volumes:
      - supabase-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # n8n pour l'orchestration des workflows
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=localhost
      - NODE_ENV=development
      - WEBHOOK_URL=http://localhost:5678/
      - EXECUTIONS_PROCESS=main
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=postgres
      - DB_POSTGRESDB_PASSWORD=postgres
    volumes:
      - n8n-data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

  # Serveur MCP NestJS
  mcp-server:
    build:
      context: .
      dockerfile: apps/mcp-server/Dockerfile
    ports:
      - "3030:3030"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/remix_nestjs_dev
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=http://supabase:54322
      - SUPABASE_KEY=your-supabase-key
      - MCP_PORT=3030
    volumes:
      - ./apps/mcp-server:/app
      - ./packages:/packages
      - node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Application Frontend Remix
  frontend:
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/remix_nestjs_dev
      - BACKEND_URL=http://backend:3333
    volumes:
      - ./apps/frontend:/app
      - ./packages:/packages
      - node_modules:/app/node_modules
    depends_on:
      - backend

  # API Backend NestJS
  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    ports:
      - "3333:3333"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/remix_nestjs_dev
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./apps/backend:/app
      - ./packages:/packages
      - node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres-data:
  redis-data:
  supabase-data:
  n8n-data:
  node_modules:
