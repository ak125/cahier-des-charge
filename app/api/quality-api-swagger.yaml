openapi: 3.0.0
info:
  title: API de Qualité
  description: API permettant d'accéder aux données de qualité du tableau de bord
  version: 1.0.0
servers:
  - url: /api/quality
    description: Serveur local
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Message d'erreur
    QualityAlert:
      type: object
      properties:
        type:
          type: string
          description: Type d'alerte (degradation ou improvement)
          enum: [degradation, improvement]
        category:
          type: string
          description: Catégorie concernée par l'alerte
          enum: [seo, performance, accessibility, bestPractices, usability, ux, file]
        message:
          type: string
          description: Message décrivant l'alerte
        timestamp:
          type: string
          format: date-time
          description: Date et heure de détection de l'alerte
        previousValue:
          type: number
          description: Valeur précédente du score
        currentValue:
          type: number
          description: Valeur actuelle du score
        file:
          type: string
          description: Fichier concerné (optionnel)
    QualitySummary:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Date et heure de la dernière mise à jour
        averageScore:
          type: number
          description: Score SEO moyen global
        performance:
          type: number
          description: Score de performance moyen
        accessibility:
          type: number
          description: Score d'accessibilité moyen
        bestPractices:
          type: number
          description: Score de meilleures pratiques moyen
        usability:
          type: number
          description: Score d'utilisabilité moyen (si disponible)
        ux:
          type: number
          description: Score d'expérience utilisateur moyen (si disponible)
        totalFiles:
          type: number
          description: Nombre total de fichiers analysés
        passedFiles:
          type: number
          description: Nombre de fichiers ayant réussi tous les tests
        failedFiles:
          type: number
          description: Nombre de fichiers ayant échoué au moins à un test
    Issue:
      type: object
      properties:
        message:
          type: string
          description: Description du problème
        count:
          type: number
          description: Nombre d'occurrences du problème
        impact:
          type: string
          description: Impact du problème (high, medium, low)
          enum: [high, medium, low]
        affectedFiles:
          type: array
          description: Liste des fichiers/URLs affectés par le problème
          items:
            type: string
    AnalysisStatus:
      type: object
      properties:
        status:
          type: string
          description: État de l'analyse (running ou idle)
          enum: [running, idle]
        startTime:
          type: string
          format: date-time
          description: Date et heure de début de l'analyse (si running)
        elapsedSeconds:
          type: number
          description: Temps écoulé depuis le début de l'analyse en secondes (si running)
        lastUpdate:
          type: string
          format: date-time
          description: Date et heure de la dernière mise à jour (si idle)
security:
  - ApiKeyAuth: []
paths:
  /health:
    get:
      summary: Vérifie si l'API est en ligne
      tags:
        - Statut
      security: []  # Ne nécessite pas d'authentification
      responses:
        '200':
          description: API en ligne
          content:
            application/json:
              example:
                status: ok
                timestamp: '2025-04-16T10:00:00Z'
  /dashboard:
    get:
      summary: Récupère les données complètes du tableau de bord de qualité
      tags:
        - Données de qualité
      responses:
        '200':
          description: Données du tableau de bord
        '404':
          description: Données non disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /historical:
    get:
      summary: Récupère les données historiques de qualité
      tags:
        - Données de qualité
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date-time
          description: Date de début pour le filtrage (format ISO)
        - in: query
          name: to
          schema:
            type: string
            format: date-time
          description: Date de fin pour le filtrage (format ISO)
      responses:
        '200':
          description: Données historiques
        '404':
          description: Données non disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /alerts:
    get:
      summary: Récupère les alertes de qualité
      tags:
        - Alertes
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [degradation, improvement]
          description: Filtre par type d'alerte
        - in: query
          name: category
          schema:
            type: string
            enum: [seo, performance, accessibility, bestPractices, usability, ux, file]
          description: Filtre par catégorie
        - in: query
          name: limit
          schema:
            type: integer
          description: Nombre maximum d'alertes à retourner
      responses:
        '200':
          description: Alertes de qualité
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QualityAlert'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /file/{filePath}:
    get:
      summary: Récupère les données de qualité pour un fichier spécifique
      tags:
        - Données de qualité
      parameters:
        - in: path
          name: filePath
          schema:
            type: string
          required: true
          description: Chemin du fichier
      responses:
        '200':
          description: Données de qualité du fichier
        '404':
          description: Fichier non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /category/{category}:
    get:
      summary: Récupère les données pour une catégorie spécifique
      tags:
        - Données de qualité
      parameters:
        - in: path
          name: category
          schema:
            type: string
            enum: [seo, performance, accessibility, bestpractices, usability, ux]
          required: true
          description: Catégorie d'analyse
      responses:
        '200':
          description: Données de la catégorie
        '400':
          description: Catégorie non valide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Données non disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /summary:
    get:
      summary: Récupère un résumé des scores de qualité
      tags:
        - Données de qualité
      responses:
        '200':
          description: Résumé des scores de qualité
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualitySummary'
        '404':
          description: Données non disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /trigger-analysis:
    post:
      summary: Déclenche une analyse de qualité
      tags:
        - Actions
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [full, incremental]
                  default: incremental
                  description: Type d'analyse à effectuer
                targetDir:
                  type: string
                  description: Répertoire cible à analyser (optionnel)
      responses:
        '200':
          description: Analyse déclenchée
          content:
            application/json:
              example:
                status: started
                type: incremental
                targetDir: /path/to/dir
        '409':
          description: Une analyse est déjà en cours
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /status:
    get:
      summary: Vérifie le statut de l'analyse en cours
      tags:
        - Statut
      responses:
        '200':
          description: Statut de l'analyse
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisStatus'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /issues:
    get:
      summary: Récupère les problèmes de qualité les plus courants
      tags:
        - Données de qualité
      parameters:
        - in: query
          name: category
          schema:
            type: string
            enum: [seo, performance, accessibility, bestpractices, usability, ux]
          description: Filtre par catégorie
        - in: query
          name: limit
          schema:
            type: integer
          description: Nombre maximum de problèmes à retourner
      responses:
        '200':
          description: Problèmes de qualité
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
        '400':
          description: Catégorie non valide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Données non disponibles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non autorisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'